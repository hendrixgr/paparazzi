<!--
The flight plan can use several internal variables, macros and functions coming from the rest of the system or the flight plan API itself. The following list present some of the most commonly used variables, but much more are actually available:

    autopilot_flight_time: time in seconds since autopilot was booted (integer)
    datalink_time: time in seconds since last connection of telemetry to ground control station (including subsystems/datalink/datallink.h 
    in the header section is required) (integer)
    GetPosAlt(): returns the current altitude above ground level in meter (float)
    GetPosX(): returns x (easting) of current position relative to reference in meter (float)
    GetPosY(): returns y (northing) of current position relative to reference in meter (float)
    ground_alt: altitude above ground level in meter (float) (v5.8 and higher - use GetAltRef() instead)
    GetAltRef(): returns reference altitude, usually ground_alt
    NavSetGroundReferenceHere(): reset position and altitude reference point to current position
    NavSetAltitudeReferenceHere(): reset altitude reference to current alt but keep previous horizontal position reference
    NavSetWaypointHere(_wp): set position of a waypoint given as argument to the current position
    WaypointX(_wp): returns x (easting) of waypoint position relative to reference in meter (float)
    WaypointY(_wp): returns y (northing) of waypoint position relative to reference in meter (float)
    WaypointAlt(_wp): returns waypoint altitude in meter (float)
    nav_radius: free variable usually used to set circle radius in flight plan
    NavKillThrottle(): function to switch off throttle
    PowerVoltage(): returns current voltage of the battery
    all functions from the state interface API
    all functions from the waypoint API
    all variables declared in modules headers

Parameters used in a flight plan can be computed expressions. In this example, the plane is asked to perform 5 circles at progressively increasing altitudes for exactly one minute at each altitude:

  <for var="i" from="1" to="5">
    <circle wp="HOME" radius="75"
          alt="ground_alt + 50*$i"
          until="stage_time > 60" />
  </for>

Below you find some random examples of the posibilities. This is only the tip of the iceberg, use your imagination and go wild with new creative ideas for your flightplan
Gains on the fly

It is very well possible to set specific gain for an airframe if it reaches e.g a certain block.
Dynacmically adjustable maximum speed

<call_once fun="gh_set_max_speed(2.0)"/>

Immobilize Actuators

h_ctl setpoints variable are set by the h_ctl_attitude_loop() (from fw_h_ctl.c) loop) which can be disabled with the h_ctl_disabled flag:

 <set var="h_ctl_disabled" value="TRUE"/>
 <set var="h_ctl_aileron_setpoint" value="0"/>
 <set var="h_ctl_elevator_setpoint" value="MAX_PPRZ/2"/>
 .... waiting for a condition ...
 <set var="h_ctl_disabled" value="FALSE"/>


-->


<!DOCTYPE flight_plan SYSTEM "flight_plan.dtd">

<flight_plan alt="200." ground_alt="42" lat0="37.813549" lon0="23.869128" max_dist_from_home="4000" name="lagonisi_beach_survey" qfu="0" security_height="100.">
  <header>
#include "subsystems/ins/ins_alt_float.h"
#include "subsystems/datalink/datalink.h"
#define NavCopyWaypoint(_wp1, _wp2) ({ VECT2_COPY(waypoints[_wp1], waypoints[_wp2]); FALSE; })
</header>
  <waypoints>
    <waypoint height="0" name="HOME" x="14.2" y="3.2"/>
    <waypoint height="0" lat="37.813236" lon="23.868723" name="TD"/>
    <waypoint height="0" name="CAM_POINT" x="58.6" y="-69.1"/>
    <waypoint height="30" name="STANDBY" x="30.3" y="-7.1"/>
    <waypoint height="30" name="RIGHT_HERE" x="-1.8" y="-57.6"/>
    <waypoint height="30" name="AF" x="25.6" y="-157.5"/>
    <waypoint name="BASELEG" x="-46.1" y="114.0"/>
    <waypoint height="30" name="MOB" x="-1.4" y="-44.9"/>
    <waypoint height="0" lat="37.814005" lon="23.868690" name="RUNWAY_END_N"/>
    <waypoint height="0" lat="37.812407" lon="23.868813" name="RUNWAY_END_S"/>
    <waypoint height="30" lat="37.812228" lon="23.868811" name="AF_SOUTH"/>
    <waypoint height="30" lat="37.814688" lon="23.868633" name="AF_NORTH"/>
    <waypoint height="30" name="RELEASE" x="29.6" y="12.7"/>
    <waypoint alt="200" lat="37.811080" lon="23.867030" name="WP1"/>
    <waypoint alt="200" lat="37.808666" lon="23.866264" name="WP2"/>
    <waypoint alt="200" lat="37.807357" lon="23.864500" name="WP3"/>
    <waypoint alt="200" lat="37.805642" lon="23.865021" name="WP4"/>
    <waypoint alt="200" lat="37.804542" lon="23.863828" name="WP5"/>
    <waypoint alt="200" lat="37.803268" lon="23.863155" name="WP6"/>
    <waypoint alt="200" lat="37.799805" lon="23.865531" name="TARGET"/>
  </waypoints>
  <sectors/>
  <variables>
    <variable init="0" max="1000." min="-(NAV_DEFAULT_ALT)" var="alt_step"/>
    <variable init="0.052083333" var="alt_coef"/>
  </variables>
  <exceptions>
    <!-- Those rc channels channel must be spring loaded switches or sticks, they must return to the center PW value after the block change. -->
    <exception cond="(imcu_get_radio(RADIO_YAW) > MAX_PPRZ/2)&&(autopilot.mode == AP_MODE_AUTO2) && (GetPosAlt() > GetAltRef()+20)" deroute="Return Home"/>
    <exception cond="(MIN_PPRZ/2 > imcu_get_radio(RADIO_YAW))&&(autopilot.mode == AP_MODE_AUTO2) && (GetPosAlt() > GetAltRef()+20)" deroute="Target"/>
    <!-- This channel should be returned to middle or low position -->
    <exception cond="(imcu_get_radio(RADIO_AUX2) > MAX_PPRZ/2)&&(autopilot.mode == AP_MODE_AUTO2) &&( GetPosAlt() > GetAltRef()+20)" deroute="GO_TO_CAM"/> 
  </exceptions>
  <blocks>
    <block name="Wait Gps">
      <set value="false" var="h_ctl_disabled"/>
      <set value="true" var="autopilot.kill_throttle"/>
      <call_once fun="imcu_set_command(COMMAND_FLAPS, 0)"/>
      <while cond="!GpsFixValid()"/>
      <while cond="(gps.pdop > 800)"/>
    </block>
    <block name="Geo Init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetGroundReferenceHere()"/>
      <call_once fun="NavSetWaypointHere(WP_HOME)"/>
    </block>
    <block name="Holding Point">
      <exception cond="((imcu_get_radio(RADIO_THROTTLE) > (MAX_PPRZ/2))&&(autopilot.mode == AP_MODE_AUTO2))" deroute="Takeoff"/>
      <set value="true" var="autopilot.kill_throttle"/>
      <call_once fun="imcu_set_command(COMMAND_FLAPS, MAX_PPRZ/2)"/>
      <attitude roll="0" throttle="0" until="((sqrt(dist2_to_home) > 20)&&(GetPosAlt() > (GetAltRef()+20)))" vmode="throttle"/>
      <deroute block="Takeoff"/>
    </block>
    <block name="Takeoff" strip_button="Takeoff (wp AF_NORTH)" strip_icon="takeoff.png">
      <exception cond="GetPosAlt() > GetAltRef()+25" deroute="Standby"/>
      <set value="true" var="autopilot.launch"/>
      <set value="false" var="h_ctl_disabled"/>
      <set value="false" var="autopilot.kill_throttle"/>
      <call_once fun="imcu_set_command(COMMAND_FLAPS, MAX_PPRZ/2)"/>
      <attitude pitch="20" roll="0.0" throttle="1.0" until="GetPosAlt() > GetAltRef()+20" vmode="throttle"/>
      <call_once fun="imcu_set_command(COMMAND_FLAPS, 0)"/>
      <deroute block="Standby"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <exception cond="(((MIN_PPRZ/2) > imcu_get_radio(RADIO_AUX1))&&(autopilot.mode == AP_MODE_AUTO2))" deroute="Land"/>
      <exception cond="electrical.bat_low&&(autopilot.mode == AP_MODE_AUTO2)&&(GetPosAlt() > GetAltRef()+20)" deroute="Land"/>
      <exception cond="radio_control.status == RC_REALLY_LOST&&(autopilot.mode == AP_MODE_AUTO2)&&(GetPosAlt() > GetAltRef()+20)" deroute="Land"/>
      <exception cond="((imcu_get_radio(RADIO_THROTTLE) > (MAX_PPRZ/2))&&(autopilot.mode == AP_MODE_AUTO2))" deroute="UPDATE_Standby"/>
      <set value="false" var="h_ctl_disabled"/>
      <call_once fun="imcu_set_command(COMMAND_FLAPS, 0)"/>
      <set value="CAM_MODE_WP_HOME" var="cam_mode"/>
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <circle height="40+alt_step" radius="nav_radius" wp="TD"/>
    </block>
    <block name="GO_TO_CAM" strip_button="Follow camera" strip_icon="cam_lock.png">
      <exception cond="((imcu_get_radio(RADIO_THROTTLE) > (MAX_PPRZ/2))&&(autopilot.mode == AP_MODE_AUTO2))" deroute="UPDATE_GO_TO_CAM"/>
      <exception cond="radio_control.status == RC_REALLY_LOST&&(autopilot.mode == AP_MODE_AUTO2)&&(GetPosAlt() > GetAltRef()+20)" deroute="Return Home"/>
      <set value="(imcu_get_radio(RADIO_AUX1)*alt_coef)" var="alt_step"/>
      <set value="CAM_MODE_TRACK" var="cam_mode"/>
      <call fun="NavSetWaypointPosAndAltHere(WP_RIGHT_HERE)"/>
      <set value="NAV_DEFAULT_ALT" var="WaypointAlt(WP_RIGHT_HERE)"/>
<!--  <set value="WP_MOB" var="cam_target_wp"/> 
      <set value="CAM_MODE_WP_TARGET" var="cam_mode"/> -->
      <call fun="NavCopyWaypoint(WP_MOB, WP_CAM_POINT)"/>
      <set value="NAV_DEFAULT_ALT" var="WaypointAlt(WP_MOB)"/>
      <go alt="WaypointAlt(WP_RIGHT_HERE)+alt_step" from="RIGHT_HERE" hmode="route" wp="MOB"/>
      <circle alt="WaypointAlt(WP_RIGHT_HERE)+alt_step" radius="nav_radius" until="NavCircleCount() > 2" wp="MOB"/>
      <set value="CAM_MODE_TRACK" var="cam_mode"/>
      <deroute block="Return Home"/>
    </block>
    <block name="Target" strip_button="Go to TARGET" strip_icon="kill.png">
      <exception cond="electrical.bat_low&&(autopilot.mode == AP_MODE_AUTO2)&&(GetPosAlt() > GetAltRef()+20)" deroute="Return Home NOW"/>
      <exception cond="((imcu_get_radio(RADIO_THROTTLE) > (MAX_PPRZ/2))&&(autopilot.mode == AP_MODE_AUTO2))" deroute="UPDATE_Target"/>
      <call_once fun="imcu_set_command(COMMAND_FLAPS, 0)"/>
      <set value="CAM_MODE_TRACK" var="cam_mode"/>
      <set value="(imcu_get_radio(RADIO_AUX1)*alt_coef)" var="alt_step"/>
      <go from="HOME" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP1"/>
      <go from="WP1" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP2"/>
      <go from="WP2" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP3"/>
      <go from="WP3" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP4"/>
      <go from="WP4" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP5"/>
      <go from="WP5" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP6"/>
      <set value="WP_TARGET" var="cam_target_wp"/>
      <set value="CAM_MODE_WP_TARGET" var="cam_mode"/>
      <go from="WP6" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="TARGET"/>
      <circle height="NAV_DEFAULT_ALT+alt_step" radius="(nav_radius)" until="NavCircleCount() > 2" wp="TARGET"/>
      <deroute block="Return Home"/>
    </block>
    <block name="Return Home" strip_button="Return Home" strip_icon="home.png">
      <exception cond="((imcu_get_radio(RADIO_THROTTLE) > (MAX_PPRZ/2))&&(autopilot.mode == AP_MODE_AUTO2))" deroute="UPDATE_Return Home"/>
      <set value="(imcu_get_radio(RADIO_AUX1)*alt_coef)" var="alt_step"/>
      <call_once fun="imcu_set_command(COMMAND_FLAPS, 0)"/>
      <set value="CAM_MODE_TRACK" var="cam_mode"/>
      <go from="TARGET" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP6"/>
      <go from="WP6" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP5"/>
      <go from="WP5" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP4"/>
      <go from="WP4" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP3"/>
      <go from="WP3" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP2"/>
      <go from="WP2" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="WP1"/>
      <set value="CAM_MODE_WP_HOME" var="cam_mode"/>
      <go from="WP1" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="HOME"/>
      <deroute block="Standby"/>
    </block>
    <block name="Return Home NOW" strip_button="Return Home" strip_icon="home.png">
      <exception cond="((imcu_get_radio(RADIO_THROTTLE) > (MAX_PPRZ/2))&&(autopilot.mode == AP_MODE_AUTO2))" deroute="UPDATE_Return Home NOW"/>
      <set value="(imcu_get_radio(RADIO_AUX1)*alt_coef)" var="alt_step"/>
      <set value="CAM_MODE_WP_HOME" var="cam_mode"/>
      <call_once fun="imcu_set_command(COMMAND_FLAPS, 0)"/>
      <call fun="NavSetWaypointHere(WP_RIGHT_HERE)"/>
      <set value="GetPosAlt()" var="WaypointAlt(WP_RIGHT_HERE)"/>
      <go from="RIGHT_HERE" height="NAV_DEFAULT_ALT+alt_step" hmode="route" wp="HOME"/>
      <deroute block="Standby"/>
    </block>
    <block name="Land" strip_button="AUTO LAND">
      <call fun="calculate_wind_no_airspeed(WP_TD, (nav_radius), 50)"/>
      <deroute block="Land1"/>
    </block>
    <block name="Land1">
      <exception cond="airborne_wind_dir > 270. || 90. > airborne_wind_dir" deroute="Land From South"/>
      <exception cond="airborne_wind_dir > 90. && 270. > airborne_wind_dir" deroute="Land From North"/>
    </block>
    <block name="Land From North" strip_button="Land FROM NORTH (wp AF_NORTH-TD)" strip_icon="land-right.png">
      <call_once fun="nav_compute_baseleg(WP_AF_NORTH, WP_TD, WP_BASELEG, -nav_radius)"/> <!-- ONCE nav_radius is negated it stays negated, only one minus sign is needed -->
      <circle height="30" radius="nav_radius" until="NavCircleCount() > 0.5" wp="BASELEG"/>
      <set value="V_CTL_AUTO_THROTTLE_MIN_CRUISE_THROTTLE" var="v_ctl_auto_throttle_cruise_throttle"/>
      <circle radius="nav_radius" until="NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10) && 10 > fabs(GetPosAlt() - WaypointAlt(WP_BASELEG))" wp="BASELEG"/>
    </block>
    <block name="Final North">
      <exception cond="GetAltRef() + 5 > GetPosAlt()" deroute="Flare North"/>
      <call_once fun="imcu_set_command(COMMAND_FLAPS, MAX_PPRZ/2)"/>
      <go from="AF_NORTH" hmode="route" vmode="glide" wp="TD"/>
    </block>
    <block name="Flare North">
      <!-- <go height="0" approaching_time="0" climb="-0.4" from="AF_NORTH" hmode="route" pitch="auto" throttle="0.0" vmode="climb" wp="RUNWAY_END_S"/> -->
      <go approaching_time="0" from="AF_NORTH" hmode="route" throttle="0.0" vmode="throttle" wp="TD"/>
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Land From South" strip_button="Land FROM SOUTH (wp AF_SOUTH-TD)" strip_icon="land-left.png">
      <call_once fun="nav_compute_baseleg(WP_AF_SOUTH, WP_TD, WP_BASELEG, nav_radius)"/>
      <circle height="30" radius="nav_radius" until="NavCircleCount() > 0.5" wp="BASELEG"/>
      <set value="V_CTL_AUTO_THROTTLE_MIN_CRUISE_THROTTLE" var="v_ctl_auto_throttle_cruise_throttle"/>
      <circle radius="nav_radius" until="NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10) && 10>fabs(GetPosAlt()-WaypointAlt(WP_BASELEG))" wp="BASELEG"/>
    </block>
    <block name="final South">
      <exception cond="GetAltRef() + 5 > GetPosAlt()" deroute="Flare South"/>
      <call_once fun="imcu_set_command(COMMAND_FLAPS, MAX_PPRZ/2)"/>
      <go from="AF_SOUTH" hmode="route" vmode="glide" wp="TD"/>
    </block>
    <block name="Flare South">
      <!-- <go height="0" approaching_time="0" climb="-0.4" from="AF_SOUTH" hmode="route" pitch="auto" throttle="0.0" vmode="climb" wp="RUNWAY_END_N"/> -->
      <go approaching_time="0" from="AF_SOUTH" hmode="route" throttle="0.0" vmode="throttle" wp="TD"/>
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Recover Uav" strip_button="Recover" strip_icon="parachute.png">
      <call fun="LockParachute()"/>
      <call fun="calculate_wind_no_airspeed(WP_TD, (nav_radius), 50)"/>
      <call fun="ParachuteComputeApproach(WP_BASELEG, WP_RELEASE, WP_TD)"/>
      <circle alt="(ground_alt+30)" radius="nav_radius" until="NavQdrCloseTo(DegOfRad(parachute_start_qdr)-(nav_radius/fabs(nav_radius))*10) && 10>fabs(GetPosAlt()-(ground_alt+30))" wp="BASELEG"/>
      <call_once fun="imcu_set_command(COMMAND_FLAPS, MAX_PPRZ/2)"/>
      <call fun="NavSetWaypointHere(WP_MOB)"/>
      <go from="MOB" hmode="route" wp="RELEASE"/>
      <attitude pitch="10" roll="0.0" throttle="0" until="MINIMUM_AIRSPEED > stateGetHorizontalSpeedNorm_f()" vmode="throttle"/>
      <call fun="DeployParachute()"/>
      <set value="true" var="autopilot.kill_throttle"/>
      <circle height="70." radius="nav_radius" wp="HOME"/>
    </block>
    <block name="UPDATE_Standby">
      <set value="CAM_MODE_TRACK" var="cam_mode"/>
      <set value="(imcu_get_radio(RADIO_AUX1)*alt_coef)" var="alt_step"/>
      <deroute block="Standby"/>
    </block>
    <block name="UPDATE_GO_TO_CAM">
      <set value="CAM_MODE_TRACK" var="cam_mode"/>
      <set value="(imcu_get_radio(RADIO_AUX1)*alt_coef)" var="alt_step"/>
      <deroute block="GO_TO_CAM"/>
    </block>
    <block name="UPDATE_Target">
      <set value="CAM_MODE_TRACK" var="cam_mode"/>
      <set value="(imcu_get_radio(RADIO_AUX1)*alt_coef)" var="alt_step"/>
      <deroute block="Target"/>
    </block>
    <block name="UPDATE_Return Home">
      <set value="CAM_MODE_TRACK" var="cam_mode"/>
      <set value="(imcu_get_radio(RADIO_AUX1)*alt_coef)" var="alt_step"/>
      <deroute block="Return Home"/>
    </block>
    <block name="UPDATE_Return Home NOW">
      <set value="CAM_MODE_TRACK" var="cam_mode"/>
      <set value="(imcu_get_radio(RADIO_AUX1)*alt_coef)" var="alt_step"/>
      <deroute block="Return Home NOW"/>
    </block>
  </blocks>
</flight_plan>
